{"version":3,"sources":["logo.svg","context/globalState.js","components/MovieContols.js","components/MovieCard.js","components/Watched.js","components/Header.js","components/Watchlist.js","components/ResultCard.js","components/Add.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","watchlist","localStorage","getItem","JSON","parse","watched","globalContext","createContext","AppReducer","state","action","type","payload","filter","movie","id","GlobalProvider","props","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","prop1","prop2","prop3","prop4","prop5","children","MovieContols","context","useContext","removeMovieFromWatchList","addToWatchedList","removeMovieFromWatched","moveMovieToWathcList","class","onClick","className","MovieCard","console","log","poster_path","src","alt","title","Watched","length","map","Header","to","Watchlist","ResultCard","object","addMovieToWatch","movieRepeatsWatchlist","find","o","movieRepeatsWatched","storedMovie","release_date","substring","disabled","Add","useState","query","setQuery","results","setResults","placeholder","onChange","e","target","fetch","then","res","json","data","errors","result","key","App","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4a713578.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// import { AppReducer } from \"./AppReducer.js\";\r\nconst initialState = {\r\n  watchlist: localStorage.getItem(\"watchlist\")\r\n    ? JSON.parse(localStorage.getItem(\"watchlist\"))\r\n    : [],\r\n\r\n  watched: localStorage.getItem(\"watched\")\r\n    ? JSON.parse(localStorage.getItem(\"watched\"))\r\n    : [],\r\n};\r\n\r\nexport const globalContext = createContext(initialState);\r\n\r\n//provider component\r\n\r\nconst AppReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_MOVIE_TO_WATCHLIST\":\r\n      return {\r\n        ...state,\r\n        watchlist: [action.payload, ...state.watchlist],\r\n      };\r\n    case \"REMOVE_MOVIE_FROM_WATCHLIST\":\r\n      return {\r\n        ...state,\r\n        watchlist: state.watchlist.filter(\r\n          (movie) => movie.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_TO_WATCHED_LIST\":\r\n      return {\r\n        ...state,\r\n        watchlist: state.watchlist.filter(\r\n          (movie) => movie.id !== action.payload.id\r\n        ),\r\n        watched: [action.payload, ...state.watched],\r\n      };\r\n    case \"REMOVE_FROM_WATCHED_LIST\":\r\n      return {\r\n        ...state,\r\n        watched: state.watched.filter((movie) => {\r\n          return movie.id !== action.payload;\r\n        }),\r\n      };\r\n    case \"MOVE_MOVIE_TO_WATCHLIST\":\r\n      return {\r\n        ...state,\r\n        watched: state.watched.filter((movie) => {\r\n          return movie.id !== action.payload.id;\r\n        }),\r\n        watchlist: [action.payload, ...state.watchlist],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const GlobalProvider = (props) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n  useEffect(() => {\r\n    localStorage.setItem(\"watchlist\", JSON.stringify(state.watchlist));\r\n    localStorage.setItem(\"watched\", JSON.stringify(state.watched));\r\n  }, [state]);\r\n  const addMovieToWatchList = (movie) => {\r\n    dispatch({ type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie });\r\n  };\r\n  const removeMovieFromWatchList = (id) => {\r\n    dispatch({ type: \"REMOVE_MOVIE_FROM_WATCHLIST\", payload: id });\r\n  };\r\n  const addToWatchedList = (movie) => {\r\n    dispatch({ type: \"ADD_TO_WATCHED_LIST\", payload: movie });\r\n  };\r\n  const removeMovieFromWatched = (id) => {\r\n    dispatch({ type: \"REMOVE_FROM_WATCHED_LIST\", payload: id });\r\n  };\r\n  const moveMovieToWathcList = (movie) => {\r\n    dispatch({ type: \"MOVE_MOVIE_TO_WATCHLIST\", payload: movie });\r\n  };\r\n  return (\r\n    //actions\r\n\r\n    <globalContext.Provider\r\n      value={{\r\n        watchlist: state.watchlist,\r\n        watched: state.watched,\r\n        prop1: addMovieToWatchList,\r\n        prop2: removeMovieFromWatchList,\r\n        prop3: addToWatchedList,\r\n        prop4: removeMovieFromWatched,\r\n        prop5: moveMovieToWathcList,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </globalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { globalContext } from \"../context/globalState.js\";\r\n\r\nfunction MovieContols({ movie, type }) {\r\n  const context = useContext(globalContext);\r\n  const removeMovieFromWatchList = context.prop2;\r\n  const addToWatchedList = context.prop3;\r\n  const removeMovieFromWatched = context.prop4;\r\n  const moveMovieToWathcList = context.prop5;\r\n  return (\r\n    <div>\r\n      <div class=\"inner-card-controls\">\r\n        {type === \"watchlist\" && (\r\n          <>\r\n            <button\r\n              class=\"ctrl-btn\"\r\n              onClick={() => {\r\n                addToWatchedList(movie);\r\n              }}\r\n            >\r\n              <i class=\"fa-fw far fa-eye\"></i>\r\n            </button>\r\n            <button\r\n              class=\"ctrl-btn\"\r\n              onClick={() => {\r\n                removeMovieFromWatchList(movie.id);\r\n              }}\r\n            >\r\n              <i class=\"fa-fw fa fa-times\"></i>\r\n            </button>\r\n          </>\r\n        )}\r\n        {type === \"watched\" && (\r\n          <>\r\n            <button\r\n              className=\"ctrl-btn\"\r\n              onClick={() => {\r\n                moveMovieToWathcList(movie);\r\n              }}\r\n            >\r\n              <i class=\"fas fa-eye-slash\"></i>\r\n            </button>\r\n\r\n            <button\r\n              className=\"ctrl-btn\"\r\n              onClick={() => {\r\n                removeMovieFromWatched(movie.id);\r\n              }}\r\n            >\r\n              <i class=\"fa-fw fa fa-times\"></i>\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieContols;\r\n","import React from \"react\";\r\nimport MovieControls from \"./MovieContols.js\";\r\n\r\nfunction MovieCard({ movie, type }) {\r\n  return (\r\n    <div class=\"movie-card\">\r\n      <div class=\"overlay\"></div>\r\n      {console.log(movie.poster_path)}\r\n\r\n      {movie.poster_path ? (\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\r\n          alt={`${movie.title} Poster`}\r\n        ></img>\r\n      ) : (\r\n        <div class=\"filler-poster\"></div>\r\n      )}\r\n\r\n      <MovieControls type={type} movie={movie} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieCard;\r\n","import React, { useContext } from \"react\";\r\nimport { globalContext } from \"../context/globalState.js\";\r\nimport MovieCard from \"./MovieCard.js\";\r\n\r\nfunction Watched() {\r\n  const context = useContext(globalContext);\r\n  const watched = context.watched;\r\n\r\n  return (\r\n    <div class=\"movie-page\">\r\n      <div class=\"container\">\r\n        <div class=\"header\">\r\n          <h1 class=\"header\">My watched movies</h1>\r\n          <span class=\"count-pill\">\r\n            {watched.length} {watched.length === 1 ? \"Movie\" : \"Movies\"}\r\n          </span>\r\n        </div>\r\n        {watched.length > 0 ? (\r\n          <div className=\"movie-grid\">\r\n            {watched.map((movie) => {\r\n              return <MovieCard movie={movie} type={\"watched\"} />;\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <h2 className=\"no-movies\">No movies that you watched!</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Watched;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <div className=\"container\">\r\n        <div className=\"inner-content\">\r\n          <div class=\"brand\">\r\n            <Link to=\"/\"> Watchlist</Link>\r\n          </div>\r\n          <ul class=\"nav-links\">\r\n            <li class=\"nav-links\">\r\n              <Link to=\"/watchlist\">Watch List</Link>\r\n            </li>\r\n            <li class=\"nav-links\">\r\n              <Link to=\"/watched\">Watched</Link>\r\n            </li>\r\n            <li class=\"nav-links\">\r\n              <Link to=\"/add\" className=\"btn\">\r\n                +ADD\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport { globalContext } from \"../context/globalState\";\r\nimport Watched from \"./Watched\";\r\nimport MovieCard from \"./MovieCard.js\";\r\nfunction Watchlist() {\r\n  const context = useContext(globalContext);\r\n  const watchlist = context.watchlist;\r\n  return (\r\n    <div class=\"movie-page\">\r\n      <div class=\"container\">\r\n        <div class=\"header\">\r\n          <h1 class=\"header\">My Watchlist</h1>\r\n          <span class=\"count-pill\">\r\n            {watchlist.length} {watchlist.length === 1 ? \"Movie\" : \"Movies\"}\r\n          </span>\r\n        </div>\r\n        {watchlist.length > 0 ? (\r\n          <div className=\"movie-grid\">\r\n            {watchlist.map((movie) => {\r\n              return <MovieCard movie={movie} type={\"watchlist\"} />;\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <h2 className=\"no-movies\">No movies in your Watch List, add some!</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Watchlist;\r\n","import React, { useContext } from \"react\";\r\nimport { globalContext } from \"../context/globalState\";\r\n\r\nfunction ResultCard({ movie }) {\r\n  const object = useContext(globalContext);\r\n  const addMovieToWatch = object.prop1;\r\n  const watchlist = object.watchlist;\r\n  const watched = object.watched;\r\n  const addToWatchedList = object.prop3;\r\n\r\n  let movieRepeatsWatchlist = watchlist.find((o) => o.id === movie.id);\r\n  let movieRepeatsWatched = watched.find((o) => o.id === movie.id);\r\n\r\n  let storedMovie = movieRepeatsWatchlist || movieRepeatsWatched ? true : false;\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"result-card\">\r\n        <div class=\"poster-wrapper\">\r\n          {movie.poster_path ? (\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\r\n              alt={`${movie.title} Poster`}\r\n            ></img>\r\n          ) : (\r\n            <div class=\"filler-poster\"></div>\r\n          )}\r\n        </div>\r\n        <div class=\"info\">\r\n          <div class=\"header\">\r\n            <h3 class=\"title\">{movie.title}</h3>\r\n            <h4 className=\"release-date\">\r\n              {movie.release_date ? movie.release_date.substring(0, 4) : \"-\"}\r\n            </h4>\r\n          </div>\r\n          <div className=\"controls\">\r\n            <button\r\n              class=\"btn\"\r\n              disabled={storedMovie}\r\n              onClick={() => {\r\n                if (storedMovie) {\r\n                } else {\r\n                  addMovieToWatch(movie);\r\n                }\r\n              }}\r\n            >\r\n              Add to Watchlist\r\n            </button>\r\n            <button\r\n              class=\"btn\"\r\n              disabled={movieRepeatsWatched}\r\n              onClick={() => {\r\n                if (movieRepeatsWatched) {\r\n                } else {\r\n                  addToWatchedList(movie);\r\n                }\r\n              }}\r\n            >\r\n              Add to Watched\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultCard;\r\n","import React, { useState } from \"react\";\r\nimport ResultCard from \"./ResultCard.js\";\r\nfunction Add() {\r\n  const [query, setQuery] = useState();\r\n  const [results, setResults] = useState([]);\r\n  const onChange = (e) => {\r\n    setQuery(e.target.value);\r\n    fetch(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=2a78ad2f9fc27a2417c7790b3835f4be&language=en-US&page=1&include_adult=false&query=${e.target.value}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (!data.errors) {\r\n          setResults(data.results);\r\n          console.log(results);\r\n        } else {\r\n          setResults({});\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <div class=\"add-page\">\r\n        <div class=\"container\">\r\n          <div class=\"add-content\">\r\n            <div class=\"input-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search for a movie...\"\r\n                value={query}\r\n                onChange={onChange}\r\n              ></input>\r\n            </div>\r\n            {results.length > 0 && (\r\n              <ul>\r\n                {results.map((result) => {\r\n                  return (\r\n                    <div>\r\n                      <ResultCard key={result.id} movie={result} />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </ul>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Add;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Watched from \"./components/Watched\";\nimport Header from \"./components/Header\";\nimport Watchlist from \"./components/Watchlist\";\nimport Add from \"./components/Add\";\nimport { GlobalProvider, globalContext } from \"./context/globalState\";\n\nfunction App() {\n  return (\n    <div>\n      <GlobalProvider>\n        <Router>\n          <Header />\n          <switch>\n            <Route path=\"/add\" component={Add}></Route>\n            <Route path=\"/watched\" exact component={Watched}></Route>\n            <Route path=\"/watchlist\" exact component={Watchlist}></Route>\n          </switch>\n        </Router>\n      </GlobalProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}